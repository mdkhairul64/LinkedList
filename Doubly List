#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
    int data;
    Node* prev;
    Node* next;

    Node(int d)
    {
        this->data=d;
        this->prev=NULL;
        this->next=NULL;
    }

    ~Node()
    {
        int value=this->data;
        if(this->next!=NULL)
        {
            delete next;
            this->next=NULL;
        }
    }
};

void insert_at_head(Node* &head,int d)
{
    if(head==NULL)
    {
        Node* temp=new Node(d);
        head=temp;
    }
    else {
        Node * temp=new Node(d);
        temp->next=head;
        head->prev=temp;
        head=temp;
    }
}

void insert_at_tail(Node* &tail,int d)
{
    if(tail==NULL)
    {
        Node* temp=new Node(d);
        tail=temp;
    }
    else{
        Node* temp=new Node(d);
        tail->next=temp;
        temp->prev=tail;
        tail=temp;
    }
}
void insert_at_position(Node* &head,Node* & tail,int position,int d)
{
    ///insert at first position
    if(position==1)
    {
        insert_at_head(head,d);
        return ;
    }
    Node* temp=head;
    int cnt=1;
    while(cnt<position-1)
    {
        temp=temp->next;
        cnt++;
    }

    //inserting at last position
    if(temp->next==NULL)
    {
        insert_at_tail(tail,d);
        return ;
    }

    Node* node_to_insert=new Node(d);
    node_to_insert->next=temp->next;
    temp->next->prev=node_to_insert;
    temp->next=node_to_insert;
    node_to_insert->prev=temp;
}

void delete_node(int position,Node* &head)
{
    if(position==1)
    {
        Node * temp=head;
        temp->next->prev=NULL;
        head=temp->next;
        temp->next=NULL;
        delete temp;
    }
    else{
        Node * curr=head;
        Node * prev=NULL;
        

        int cnt=1;
        while(cnt<position)
        {
            prev=curr;
            curr=curr->next;
            cnt++;
        }
        curr->prev=NULL;

        prev->next=curr->next;
        curr->next=NULL;
        delete curr;
    }
}
void print_list(Node* &head)
{
    Node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }cout<<endl;
}

int get_lenght(Node* &head)
{
    int len=0;
    Node* temp=head;
    while(temp!=NULL)
    {
        len++;
        temp=temp->next;

    }

    return len;
}

int main()
{
    Node* node1=new Node(10);
    Node* head=node1;
    Node* tail=node1;

    print_list(head);

    insert_at_head(head,11);
    print_list(head);

    insert_at_tail(tail,20);
    print_list(head);


    insert_at_position(head,tail,2,1000);
    print_list(head);


    insert_at_head(head,99);
    print_list(head);

     insert_at_position(head,tail,6,1111);
    print_list(head);

    delete_node(4,head);
    print_list(head);


    return 0;


}
